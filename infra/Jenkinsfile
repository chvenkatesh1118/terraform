pipeline {
agent any
//       environment {
//          SERVICE = 'ec2'
//
//       }
 parameters { choice(name: 'service',
                       choices: ['ec2',
                                  'ecr'],
                       description: 'service') }
  parameters { choice(name: 'task',
                      choices: ['create',
                                 'destroy'],
                      description: 'task') }


  stages{
   stage('create '){

   when {
                          expression {
                             return params.service == 'ec2'
                          }
                      }

    when {
                       expression {
                          return params.task == 'create'
                       }
                   }
      steps{
      sh 'cd infra/ec2; terraform init'
      sh 'cd infra/${SERVICE}; terraform plan'
      sh 'cd infra/${SERVICE}; terraform apply -auto-approve'

      }
    }

    stage('destroy ${SERVICE}'){
        when {
                       expression {
                          return params.task == 'destroy'
                       }
                   }
          steps{

          sh 'cd infra/${SERVICE}; terraform destroy -auto-approve'

          }
        }

      //////////////////////////////////////////////////////
      stage('create '){

         when {
                                expression {
                                   return params.service == 'ecr'
                                }
                            }

          when {
                             expression {
                                return params.task == 'create'
                             }
                         }
            steps{
            sh 'cd infra/ecr; terraform init'
            sh 'cd infra/ecr; terraform plan'
            sh 'cd infra/ecr; terraform apply -auto-approve'

            }
          }

          stage('destroy '){
              when {
                             expression {
                                return params.task == 'destroy'
                             }
                         }
                steps{

                sh 'cd infra/ecr; terraform destroy -auto-approve'

                }
              }

  }
}
